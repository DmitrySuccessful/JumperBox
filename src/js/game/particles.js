class Particle{constructor(x,y,c){this.x=x;this.y=y;this.color=c;this.size=Math.random()*3+2;this.speedX=Math.random()*6-3;this.speedY=Math.random()*6-3;this.life=1;this.decay=Math.random()*.02+.02}update(){this.x+=this.speedX;this.y+=this.speedY;this.speedY+=.1;this.life-=this.decay;return this.life>0}draw(c){c.fillStyle=`rgba(${this.color},${this.life})`;c.beginPath();c.arc(this.x,this.y,this.size,0,Math.PI*2);c.fill()}}class ParticleSystem{constructor(){this.particles=[]}createJumpEffect(x,y){const c=["255,255,255","255,223,186","255,190,118"];for(let i=0;i<15;i++)this.particles.push(new Particle(x+Math.random()*40,y+Math.random()*10,c[Math.floor(Math.random()*c.length)]))}update(){this.particles=this.particles.filter(p=>p.update())}draw(c){this.particles.forEach(p=>p.draw(c))}}export{ParticleSystem};
